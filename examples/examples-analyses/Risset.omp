; OM File Header - Saved 2011/02/23 19:40:52
; (6.0302 :patc (om-make-point 69 123) (om-make-point 50 50) (om-make-point 929 702) "" 183 0 nil "2011/02/23 19:38:13")
; End File Header
; External resources 
; (list (list (quote :sound) "../../../in-files/Rissetex.aiff"))
(in-package :om)(load-lib-for (quote ("Pareto")))(setf *om-current-persistent* (om-load-patch1 "Risset" (quote ((om-load-boxcall (quote genfun) "TRANSCRIBE-F0" (quote |Pareto|::transcribe-f0) (quote ((om-load-inputfun (quote input-funbox) "a data list or SDIF file" "INPUTDATA" nil))) (om-make-point 530 290) nil nil nil nil 1) (om-load-boxcall (quote genfun) "TRANSCRIBE-TRC 2" (quote |Pareto|::transcribe-trc) (quote ((om-load-inputfun (quote input-funbox) "a data list or SDIF file" "INPUTDATA" nil) (om-load-inputfunmenu1 (quote input-funmenu) "monodic/polyphonic" "MODE" (quote |Pareto|::mono) (list (list "mono" (quote (quote |Pareto|::mono))) (list "poly" (quote (quote poly))))))) (om-make-point 208 290) nil nil nil nil 1) (om-load-editor-box1 "CHORD-SEQ21" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "LMIDIC" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "LONSET" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "LDUR" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "LVEL" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "LOFFSET" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "LCHAN" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "LEGATO" "LEGATO" 0))) (om-make-point 171 376) (om-make-point 164 102) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7356) (7356) (7356) (7354) (7366) (7366) (7350) (7350) (6050) (6040) (6040) (6044) (6050) (6082) (6082) (6050) (6050) (6050) (6956) (6956) (6956) (6952) (6946) (6928) (6928) (6948) (6948) (8054) (8052) (8050) (8046) (8052) (8052) (8052) (8052) (8062) (7584) (7584) (7584) (7580) (7580) (7580) (7580) (7578) (7564) (7564))) :lonset (quote (104 116 128 139 151 163 174 186 197 209 221 232 244 255 267 279 290 302 511 522 534 546 557 569 580 592 604 708 720 731 743 755 766 778 789 801 1010 1022 1033 1045 1057 1068 1080 1091 1103 1115 1127)) :ldur (quote ((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000))) :lvel (quote ((48) (59) (62) (60) (55) (51) (47) (43) (39) (54) (62) (62) (60) (55) (50) (46) (43) (40) (52) (62) (62) (62) (56) (51) (47) (44) (41) (45) (57) (62) (61) (57) (51) (46) (42) (40) (44) (57) (62) (60) (55) (50) (45) (44) (41) (39))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport zoom palette-mode obj-mode notechancolor? grillestep mode winsize winpos show-stems player scale)) (list 4 36 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 0 0 nil 1000 0 (om-make-point 1289 457) (om-make-point 10 40) (quote t) (quote :midishare) nil)) t nil nil nil) (om-load-boxcomment "comment" (om-make-point 134 43) (quote "partial tracking (from AudioSculpt)") "" (om-make-point 167 176) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 100 40) (quote "f0 analysis (from Diphone)") "" (om-make-point 521 183) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "no documentation" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "no documentation" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LEGATO" 0))) (om-make-point 495 376) (om-make-point 164 118) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((-1272300) (5680) (5680) (5382) (4778) (4782) (4782) (6134) (6140) (6140) (6140) (6140) (6140) (6140) (6140) (6138) (6136) (6128) (6124) (6122) (6122) (6122) (6130) (6140) (6142) (6142) (6142) (6144) (6144) (6144) (6144) (6142) (6142) (6142) (6142) (6132) (6126) (6118) (6118) (6120) (6130) (6140) (6142) (6142) (6142) (6142) (6142) (6140) (5806) (4152) (4152) (5694) (5694) (5694) (6174) (6174) (6174) (6328) (6328) (5694) (4548) (4548) (6192) (6192) (6054) (6054) (4550) (6194) (6902) (6902) (6904) (5710) (6900) (6898) (6898) (5706) (5706) (5714) (5714) (5712) (5712) (6912) (6912) (6910) (6138) (6136) (6136) (6136) (6134) (6128) (6126) (6126) (6126) (6128) (6136) (6138) (6138) (6136) (5706) (5706) (5706) (5708) (5708) (5706) (5706) (5704) (5702) (5694) (5694) (5690) (5696) (5696) (5696) (6240) (4242) (4238) (4238) (5598) (5706) (5706) (4240) (4240) (4240) (4238) (4238) (6094) (6126) (6126) (4238) (4238) (6140) (6140) (6140) (6140) (6140) (6140) (6142) (6142) (6140) (6138) (6124) (6124) (6130))) :lonset (quote (20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000 1010 1020 1030 1040 1050 1060 1070 1080 1090 1100 1110 1120 1130 1140 1150 1160 1170 1180 1190 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 1300 1310 1320 1330 1340 1350 1360 1370 1380 1390 1400 1410 1420 1430 1440 1450)) :ldur (quotelvel (quoteloffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport zoom palette-mode obj-mode notechancolor? grillestep mode winsize winpos show-stems player scale)) (list 4 36 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 0 0 nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t) (quote :midishare) nil)) t nil nil nil) (om-load-boxcomment "comment6" (om-make-point 175 37) (quote "PARETO - Examples") "" (om-make-point 93 28) nil (om-make-color 0.2626607 0.438914 0.30672404) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcomment "comment5" (om-make-point 71 44) (quote "Risset") "" (om-make-point 367 27) nil (om-make-color 0 0 0) (om-make-font "Verdana" 18 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "MARKERS" nil))) (om-make-point 325 69) (om-make-point 171 75) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "Rissetex" :type "aiff") 1))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "Rissetex.aiff") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 0 nil (quote t) 1 0 (om-make-point 400 20) (om-make-point 370 280) 0 1000 nil 1 (quote :libaudio) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) t nil nil nil) (om-load-editor-box1 "text-win5" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "append" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "list" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 516 230) (om-make-point 70 50) (load-buffer-textfile (quote ("0.020000	0.000000" "0.030000	217.431656" "0.040000	217.431656" "0.050000	183.002350" "0.060000	129.201767" "0.070000	129.505005" "0.080000	129.505005" "0.090000	282.715515" "0.100000	283.516602" "0.110000	283.759277" "0.120000	283.720001" "0.130000	283.759277" "0.140000	283.720001" "0.150000	283.507019" "0.160000	283.507019" "0.170000	283.489716" "0.180000	283.041412" "0.190000	281.772614" "0.200000	280.949799" "0.210000	280.877960" "0.220000	280.700348" "0.230000	280.700348" "0.240000	281.865204" "0.250000	283.759979" "0.260000	284.044769" "0.270000	284.044769" "0.280000	284.044769" "0.290000	284.168335" "0.300000	284.204895" "0.310000	284.213043" "0.320000	284.213043" "0.330000	283.976929" "0.340000	283.976929" "0.350000	283.970154" "0.360000	283.857727" "0.370000	282.404236" "0.380000	281.335602" "0.390000	280.087616" "0.400000	280.087616" "0.410000	280.429779" "0.420000	281.906464" "0.430000	283.670166" "0.440000	284.071777" "0.450000	284.071777" "0.460000	284.061554" "0.470000	283.939667" "0.480000	283.939667" "0.490000	283.600403" "0.500000	233.789688" "0.510000	89.958260" "0.520000	89.958260" "0.530000	219.285049" "0.540000	219.285049" "0.550000	219.285049" "0.560000	289.350494" "0.570000	289.350494" "0.580000	289.350494" "0.590000	316.365509" "0.600000	316.365509" "0.610000	219.266785" "0.620000	113.089188" "0.630000	113.089188" "0.640000	292.455566" "0.650000	292.455566" "0.660000	269.851929" "0.670000	269.851929" "0.680000	113.171410" "0.690000	292.526703" "0.700000	440.632599" "0.710000	440.632599" "0.720000	441.236786" "0.730000	221.247513" "0.740000	439.825012" "0.750000	439.713989" "0.760000	439.713989" "0.770000	220.729599" "0.780000	220.729599" "0.790000	221.716125" "0.800000	221.716125" "0.810000	221.556290" "0.820000	221.556290" "0.830000	442.910339" "0.840000	442.910339" "0.850000	442.716766" "0.860000	283.224213" "0.870000	282.906494" "0.880000	282.906494" "0.890000	282.906494" "0.900000	282.539520" "0.910000	281.761780" "0.920000	281.488190" "0.930000	281.283508" "0.940000	281.283508" "0.950000	281.814697" "0.960000	282.894287" "0.970000	283.432373" "0.980000	283.432373" "0.990000	283.066986" "1.000000	220.711365" "1.010000	220.711365" "1.020000	220.789246" "1.030000	220.916855" "1.040000	220.916855" "1.050000	220.846237" "1.060000	220.789734" "1.070000	220.583069" "1.080000	220.379349" "1.090000	219.173462" "1.100000	219.173462" "1.110000	218.789993" "1.120000	219.495682" "1.130000	219.495682" "1.140000	219.495682" "1.150000	300.487915" "1.160000	94.749619" "1.170000	94.574303" "1.180000	94.574303" "1.190000	207.358109" "1.200000	220.733292" "1.210000	220.733292" "1.220000	94.619370" "1.230000	94.619370" "1.240000	94.619370" "1.250000	94.567017" "1.260000	94.567017" "1.270000	276.074615" "1.280000	281.263428" "1.290000	281.263428" "1.300000	94.507973" "1.310000	94.507973" "1.320000	283.698181" "1.330000	283.807373" "1.340000	283.807373" "1.350000	283.756134" "1.360000	283.683136" "1.370000	283.683136" "1.380000	284.054810" "1.390000	284.054810" "1.400000	283.751221" "1.410000	283.445099" "1.420000	280.907990" "1.430000	280.907990" "1.440000	282.165405" "" "" "" "" "" "")) (quote textfile) "append" "list") "x" nil (pairlis (quote (deltapict outport inport zoom palette-mode obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems)) (list (om-make-point 0 0) 0 0 1 0 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t))) nil nil nil nil) (om-load-editor-box1 "text-win" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "append" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "list" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 188 224) (om-make-point 70 50) (load-buffer-textfile (quote ("( PARTIALS      5" "( POINTS      9" "   0.104	 572.491	  -5.391" "   0.116	 572.369	  -2.539" "   0.128	 572.304	  -2.000" "   0.139	 572.036	  -2.425" "   0.151	 575.848	  -3.473" "   0.163	 575.844	  -4.587" "   0.174	 570.630	  -5.712" "   0.186	 570.630	  -6.930" "   0.197	 570.630	  -8.347" ")" "( POINTS     10" "   0.197	 269.165	  -8.691" "   0.209	 267.806	  -3.862" "   0.221	 267.796	  -2.000" "   0.232	 268.250	  -2.000" "   0.244	 269.361	  -2.356" "   0.255	 274.386	  -3.525" "   0.267	 274.403	  -4.741" "   0.279	 269.165	  -5.936" "   0.290	 269.165	  -7.107" "   0.302	 269.165	  -8.265" ")" "( POINTS      9" "   0.511	 454.218	  -4.208" "   0.522	 454.395	  -2.000" "   0.534	 454.392	  -2.000" "   0.546	 453.208	  -2.113" "   0.557	 451.632	  -3.235" "   0.569	 446.956	  -4.472" "   0.580	 446.947	  -5.666" "   0.592	 452.197	  -6.780" "   0.604	 452.197	  -7.929" ")" "( POINTS      9" "   0.708	 856.527	  -6.437" "   0.720	 855.550	  -3.194" "   0.731	 854.553	  -2.058" "   0.743	 853.345	  -2.291" "   0.755	 855.810	  -3.202" "   0.766	 855.827	  -4.483" "   0.778	 855.895	  -6.145" "   0.789	 855.977	  -7.450" "   0.801	 861.328	  -8.165" ")" "( POINTS     10" "   1.010	 652.831	  -6.670" "   1.022	 652.859	  -3.122" "   1.033	 652.842	  -2.017" "   1.045	 651.433	  -2.451" "   1.057	 651.434	  -3.533" "   1.068	 651.418	  -4.848" "   1.080	 651.371	  -6.333" "   1.091	 651.296	  -6.886" "   1.103	 645.996	  -7.675" "   1.115	 645.996	  -8.793" ")" ")" "" "" "" "" "" "")) (quote textfile) "append" "list") "x" nil (pairlis (quote (inport outport deltapict zoom palette-mode obj-mode cmnpref notechancolor? grillestep mode winsize winpos show-stems)) (list 0 0 (om-make-point 0 0) 1 0 0 (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) nil 1000 0 (om-make-point 370 280) (om-make-point 10 40) (quote t))) nil nil nil nil))) (quote ((9 1 0 0 nil 0) (10 1 1 0 nil 0) (1 0 2 0 nil 0) (0 0 5 0 nil 0))) nil 6.0302))

; OM File Header - Saved 2011/02/23 19:40:52
; (6.0302 :patc (om-make-point 144 47) (om-make-point 180 0) (om-make-point 1180 856) "" 183 0 nil "2011/02/23 19:12:05")
; End File Header
; External resources 
; (list (list (quote :sound) "../../../../../OM-SRC/OM-LIBS/Pareto/resources/sound/akasehe.aiff"))
(in-package :om)(load-lib-for (quote ("Pareto")))(setf *om-current-persistent* (om-load-patch1 "Akasehe" (quote ((om-load-boxcall (quote genfun) "TRANSCRIBE-F0" (quote |Pareto|::transcribe-f0) (quote ((om-load-inputfun (quote input-funbox) "a data list or SDIF file" "INPUTDATA" nil))) (om-make-point 656 198) nil nil nil nil 1) (om-load-boxcall (quote genfun) "BPF-PEAKS 2" (quote |Pareto|::bpf-peaks) (quote ((om-load-inputfun (quote input-funbox) "a bpf" "SELF" nil))) (om-make-point 440 775) nil nil nil nil 1) (om-load-boxcall (quote genfun) "BPF-PEAKS 2" (quote |Pareto|::bpf-peaks) (quote ((om-load-inputfun (quote input-funbox) "a bpf" "SELF" nil))) (om-make-point 296 626) nil nil nil nil 1) (om-load-boxcall (quote genfun) "MOVING-AVERAGE" (quote |Pareto|::moving-average) (quote ((om-load-inputfun (quote input-funbox) "a bpf" "SELF" nil))) (om-make-point 441 622) nil nil nil nil 1) (om-load-boxcall (quote genfun) "ANALYSE-SCALE 2" (quote |Pareto|::analyse-scale) (quote ((om-load-inputfun (quote input-funbox) "a chord-seq" "SELF" nil))) (om-make-point 300 451) nil nil nil nil 1) (om-load-boxcall (quote genfun) "MAIN-PITCHES 2" (quote |Pareto|::main-pitches) (quote ((om-load-inputfun (quote input-funbox) "a chord-seq" "SELF" nil) (om-load-inputfun (quote input-funbox) "number of pitches" "N" 12))) (om-make-point 36 469) nil nil nil nil 2) (om-load-boxcall (quote genfun) "TRANSCRIBE-TRC 2" (quote |Pareto|::transcribe-trc) (quote ((om-load-inputfun (quote input-funbox) "a data list or SDIF file" "INPUTDATA" nil) (om-load-inputfunmenu1 (quote input-funmenu) "monodic/polyphonic" "MODE" (quote |Pareto|::mono) (list (list "mono" (quote (quote |Pareto|::mono))) (list "poly" (quote (quote poly))))))) (om-make-point 100 245) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 104 445) (om-make-point 28 30) 10 "10" nil) (om-load-editor-box1 "BPF2" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "X-POINTS" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y-POINTS" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "DECIMALS" "DECIMALS" 0))) (om-make-point 439 696) (om-make-point 176 69) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (5620 5622 5636 5650 5654 5658 5660 5664 5672 5674 5680 5682 5684 5686 5690 5692 5694 5698 5702 5706 5710 5710 5712 5712 5714 5716 5716 5720 5722 5724 5732 5736 5738 5740 5740 5868 5868 5878 5904 5908 5914 5918 5924 5930 5932 5934 5942 5946 5948 5952 5954 5958 5962 5966 5966 5970 5972 5978 5978 5986 5990 5998 6000 6004 6012 6014 6014 6018 6020 6040 6050 6056 6062 6068 6084 6106 6112 6118 6122 6124 6142 6146 6150 6150 6214 6250 6270 6284 6288 6290 6312 6314 6316 6332 6336 6336 6340 6344 6354 6360 6362 6366 6368 6382 6386 6394 6394 6406 6422 6426 6442 6450 6450 6530 6556 6606 9496 9504 9510 9518 9524 9534 9538 10198 10200 10206 10210 10214 10216 10218 10222 10234 10238 10240)) (quote (3 2 2 1 2 1 1 1 1 1 1 1 1 2 2 1 1 2 2 2 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 1 1 1 1 1 1 1 1 2 2 3 5 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 9 17 12 3 1 1 1 1 1 3 6 3 1 1 1 1 1 6 14 13 7 3 1 1 1 1 1 1 1 9 18 11 2 1 1 1 1 1 1 1 16 38 31 8 1 1 6 11 8 5 9 10 5 3 4 3 1 2 3 3 2 1 2 2 2 1 1 1 1 1)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) nil nil (pairlis (quote (picture show-stems winpos winsize mode grillestep notechancolor? cmnpref obj-mode palette-mode zoom inport outport deltapict)) (list nil (quote t) (om-make-point 10 40) (om-make-point 498 272) 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 0 1 0 0 (om-make-point 0 0))) t nil nil nil) (om-load-editor-box1 "BPF2" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "X-POINTS" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y-POINTS" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "DECIMALS" "DECIMALS" 0))) (om-make-point 329 526) (om-make-point 159 79) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (5620 5622 5636 5650 5654 5658 5660 5664 5672 5674 5680 5682 5684 5686 5690 5692 5694 5698 5702 5706 5710 5712 5714 5716 5720 5722 5724 5732 5736 5738 5740 5868 5878 5904 5908 5914 5918 5924 5930 5932 5934 5942 5946 5948 5952 5954 5958 5962 5966 5970 5972 5978 5986 5990 5998 6000 6004 6012 6014 6018 6020 6040 6062 6068 6084 6106 6112 6118 6122 6124 6142 6146 6150 6214 6250 6270 6284 6288 6314 6336 6340 6344 6354 6366 6368 6382 6386 6394 6406 6422 6426 6442 6450 6530 6556)) (quote (2 3 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 2 1 3 3 4 2 2 1 1 1 2 1 2 3 2 1 1 1 1 1 1 2 2 1 8 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 2 37 1 1 1 1 1 9 1 1 1 1 1 1 1 32 9 1 1 1 1 1 26 1 1 1 1 1 1 1 67 1 1 1 1 25 1 6)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) nil nil (pairlis (quote (picture show-stems winpos winsize mode grillestep notechancolor? cmnpref obj-mode palette-mode zoom inport outport deltapict)) (list nil (quote t) (om-make-point 10 40) (om-make-point 498 272) 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 0 1 0 0 (om-make-point 0 0))) t nil nil nil) (om-load-editor-box1 "RESULTATS ANALYSE" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "supersede" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "list" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 56 751) (om-make-point 132 87) (load-buffer-textfile (quote ("(sommets ((5622 3) (5654 2) (5686 2) (5698 2) (5706 3) (5712 4) (5732 2) (5740 3) (5942 3) (5978 2) (6014 22) (6084 9) (6150 14) (6336 37) (6394 84) (6450 25) (6556 11))) " "" "(lisses ((5654 2) (5686 2) (5698 2) (5710 3) (5732 2) (5934 2) (5978 2) (6014 12) (6084 5) (6150 10) (6336 19) (6394 42) (6450 13))) " "" "(pluspresents ((5712 4) (6014 22) (6084 9) (6150 14) (6214 9) (6336 37) (6394 84) (6450 25) (6556 11) (6606 11))" "")) (quote textfile) "supersede" "list") "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil t) (om-load-editor-box1 "CHORD21" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "LMIDIC" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "LVEL" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "LOFFSET" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "LDUR" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "LCHAN" "LCHAN" (list 1)))) (om-make-point 32 569) (om-make-point 128 112) (let ((thechord (make-instance (quote chord) :lmidic (quote (5712 5942 6014 6084 6150 6214 6336 6394 6450 6556)) :ldur (quote (1000 1000 1000 1000 1000 1000 1000 1000 1000 1000)) :lvel (quote (100 100 100 100 100 100 100 100 100 100)) :loffset (quote (0 0 0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0 0 0 0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) thechord) nil nil (pairlis (quote (scale player show-stems winpos winsize mode grillestep notechancolor? obj-mode palette-mode zoom approx fontsize staff cmnpref deltapict outport inport)) (list nil (quote :midishare) (quote t) (om-make-point 10 40) (om-make-point 644 301) 0 1000 nil 0 0 1 8 24 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0)) t nil nil nil) (om-load-editor-box1 "CHORD-SEQ21" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "LMIDIC" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "LONSET" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "LDUR" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "LVEL" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "LOFFSET" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "LCHAN" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "LEGATO" "LEGATO" 0))) (om-make-point 17 331) (om-make-point 331 99) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6382) (5998) (6014) (6014) (6014) (6014) (5942) (5942) (5946) (5958) (5954) (5930) (6250) (6288) (6084) (6084) (6084) (6084) (6014) (6014) (6014) (5978) (5932) (5706) (5698) (5690) (5674) (5660) (5654) (5654) (5658) (5672) (5686) (5698) (5706) (5712) (5714) (5710) (5702) (5692) (5686) (5682) (5680) (5684) (5694) (5710) (5724) (5738) (5740) (5706) (6084) (6084) (6084) (6084) (6084) (6068) (6062) (6354) (6368) (6394) (6394) (6394) (6394) (6394) (6450) (6450) (6450) (6450) (6450) (6450) (6450) (6450) (6450) (6450) (6450) (6450) (6394) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (5934) (5972) (5942) (5942) (5942) (5650) (5620) (5620) (5622) (5636) (5664) (5622) (5622) (6344) (6366) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6336) (6336) (6336) (6336) (6336) (6340) (6314) (6284) (6270) (6014) (6014) (6014) (6014) (6014) (6014) (6012) (6004) (5990) (5966) (5930) (6336) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6112) (6122) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6014) (6014) (6014) (6014) (6014) (6012) (5970) (5962) (5948) (5908) (5738) (5714) (5712) (5716) (5720) (5712) (5690) (6406) (6426) (6450) (6450) (6450) (6450) (6450) (6450) (6450) (6394) (6394) (6394) (6394) (6394) (6556) (6556) (6556) (6556) (6556) (6020) (6000) (6014) (6014) (6014) (6014) (5942) (5942) (5942) (5932) (5914) (5868) (6556) (6530) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6336) (6014) (6018) (6014) (6014) (6014) (6014) (6014) (6014) (6014) (6014) (6014) (6014) (6040) (6014) (5868) (5878) (5904) (5918) (5924) (5952) (5732) (5716) (5710) (5712) (5722) (5732) (5740) (5740) (5736) (6422) (6442) (6450) (6450) (6450) (6450) (6450) (6450) (6394) (6394) (6394) (6386) (6336) (6336) (6336) (6336) (6214) (6214) (6214) (6214) (6214) (6214) (6214) (6214) (6214) (6014) (6014) (6014) (5986) (5978) (5966) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6394) (6124) (6146) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6150) (6142) (6118) (6106))) :lonset (quote (46 58 70 81 93 104 116 128 139 151 163 174 206 302 313 325 337 348 360 372 383 395 406 418 469 566 778 789 801 813 824 836 848 859 871 917 929 940 952 964 975 987 998 1010 1022 1033 1045 1057 1068 1080 1091 1103 1115 1126 1138 1149 1161 1173 1184 1196 1207 1219 1231 1242 1254 1265 1277 1289 1300 1405 1416 1428 1440 1451 1463 1474 1486 1498 1509 1521 1533 1544 1556 1567 1579 1591 1602 1614 1625 1637 1649 1660 1672 1683 1695 1707 1718 1730 1741 1753 1788 1800 1811 1823 1834 1858 1869 1881 1892 1904 1916 1927 1939 2009 2020 2032 2043 2055 2067 2078 2090 2101 2113 2125 2136 2148 2159 2171 2183 2194 2206 2218 2299 2310 2322 2334 2345 2357 2368 2380 2392 2403 2415 2426 2438 2450 2461 2473 2485 2496 2508 2519 2531 2543 2554 2566 2577 2589 2601 2612 2624 2635 2647 2659 2670 2682 2705 2717 2728 2740 2752 2763 2775 2798 2810 2821 2833 2844 2856 2868 2879 2891 2902 2914 2926 2937 2949 2961 2972 2984 3030 3042 3053 3065 3077 3088 3100 3111 3123 3135 3146 3158 3170 3181 3228 3239 3251 3262 3274 3286 3297 3309 3320 3332 3344 3355 3367 3379 3390 3402 3413 3425 3437 3495 3506 3518 3529 3541 3553 3564 3576 3587 3599 3611 3622 3634 3646 3657 3669 3680 3692 3704 3715 3727 3738 3750 3762 3773 3785 3796 3808 3820 3831 3855 3866 3878 3889 3901 3913 3936 3947 3959 3971 3982 3994 4005 4017 4029 4087 4098 4110 4122 4133 4145 4156 4168 4180 4191 4203 4214 4226 4238 4249 4261 4284 4296 4307 4319 4331 4342 4354 4365 4377 4435 4447 4458 4470 4481 4493 4505 4516 4528 4540 4551 4563 4574 4586 4598 4609 4621 4632 4644 4656 4667 4679 4690 4702 4714 4725 4737 4748 4760 4772 4795 4807 4818 4830 4841 4853 4865 4876 4887)) :ldur (quotelvel (quote ((127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (48) (86) (127) (127) (127) (127) (127) (127) (113) (77) (47) (127) (127) (127) (127) (127) (127) (127) (127) (127) (108) (60) (39) (63) (91) (112) (122) (125) (126) (127) (127) (124) (120) (117) (120) (120) (115) (112) (113) (111) (108) (105) (101) (96) (93) (93) (83) (62) (41) (127) (127) (127) (127) (127) (100) (55) (52) (99) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (60) (96) (127) (127) (127) (63) (85) (101) (109) (113) (105) (84) (67) (69) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (86) (50) (59) (127) (127) (127) (127) (127) (127) (127) (127) (115) (82) (54) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (60) (117) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (117) (100) (106) (120) (123) (120) (103) (73) (46) (62) (123) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (48) (99) (127) (127) (127) (127) (127) (127) (127) (106) (68) (40) (127) (108) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (43) (79) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (119) (127) (127) (127) (127) (99) (64) (91) (112) (118) (117) (118) (114) (98) (72) (46) (41) (80) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (91) (55) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (54) (101) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (127) (81) (41))) :loffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale player show-stems winpos winsize mode grillestep notechancolor? obj-mode palette-mode zoom inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote :midishare) (quote t) (om-make-point 10 40) (om-make-point 1289 457) 0 1000 nil 0 0 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote gf) 36 4)) t nil nil nil) (om-load-boxcomment "comment" (om-make-point 134 43) (quote "partial tracking (from AudioSculpt)") "" (om-make-point 23 101) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment6" (om-make-point 175 37) (quote "PARETO - Examples") "" (om-make-point 94 15) nil (om-make-color 0.2626607 0.438914 0.30672404) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcomment "comment5" (om-make-point 151 34) (quote "Akasehe") "" (om-make-point 368 14) nil (om-make-color 0 0 0) (om-make-font "Verdana" 18 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 100 40) (quote "f0 analysis (from Diphone)") "" (om-make-point 670 101) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "no documentation" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "no documentation" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LEGATO" 0))) (om-make-point 575 299) (om-make-point 323 106) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4438) (6392) (6392) (6392) (6404) (6406) (6406) (6402) (6396) (5190) (5190) (5190) (6380) (6378) (6378) (6376) (6366) (6342) (6342) (6392) (6418) (6436) (6454) (6480) (6488) (6510) (6526) (6538) (6544) (6556) (6556) (4692) (4692) (4692) (4696) (6518) (6518) (6474) (6416) (6362) (6342) (6336) (6336) (6340) (6342) (6342) (6342) (6342) (6344) (6344) (6342) (6342) (6340) (6340) (6340) (6342) (6342) (6342) (6328) (5086) (5052) (4928) (4928) (4206) (5602) (6090) (6090) (6090) (6094) (6096) (6096) (6098) (6098) (6086) (6084) (5956) (5956) (5976) (5994) (6006) (6006) (5992) (5974) (4780) (4760) (4518) (4428) (4428) (4428) (4610) (4462) (4610) (4462) (5634) (5662) (5662) (4450) (4450) (5668) (5674) (5682) (5688) (5688) (5708) (5708) (5708) (4500) (4494) (4494) (4490) (4470) (4466) (4466) (4514) (4518) (4518) (5718) (5718) (4852) (4852) (6058) (6084) (6084) (6088) (6088) (6084) (6044) (4724) (4468) (4468) (4230) (5012) (4922) (4922) (4702) (4702) (4760) (4890) (4988) (5452) (5452) (5452) (6376) (6384) (6390) (6400) (6408) (6418) (6422) (6426) (6426) (6428) (6428) (6428) (6424) (6422) (6420) (6418) (6410) (6408) (6402) (6096) (6096) (6096) (6100) (6104) (6108) (6108) (6116) (6114) (6114) (6112) (6108) (6096) (6086) (4832) (4832) (4782) (4866) (5924) (5924) (5900) (5884) (5880) (5880) (5884) (5888) (5890) (5890) (5878) (5844) (5720) (4542) (4888) (4768) (4770) (4768) (4486) (4264) (4486) (5168) (6374) (6380) (6392) (6392) (6392) (6390) (6384) (6374) (6368) (6364) (6360) (6354) (6354) (6362) (6362) (6360) (6350) (5452) (4672) (4672) (4316) (4044) (4044) (4006) (4750) (4750) (6036) (6036) (6018) (5984) (5960) (5118) (5118) (6296) (6302) (6304) (6304) (6320) (6334) (6342) (6350) (6354) (6360) (6366) (6382) (6394) (6400) (6400) (6400) (6400) (6398) (6394) (6392) (6390) (6386) (6378) (6374) (6372) (6372) (6374) (6374) (6374) (5182) (5182) (5164) (6114) (6114) (6114) (6116) (6118) (6126) (6134) (6134) (6134) (6122) (6106) (6080) (6038) (6024) (5986) (5986) (5986) (5974) (5974) (5974) (5958) (5958) (5738) (5704) (5704) (5704) (5704) (4540) (4540) (5362) (5664) (5664) (4840) (4840) (5260) (5260) (5260) (6430) (6434) (6434) (6434) (6424) (6416) (6412) (6412) (6410) (6404) (6394) (6384) (6376) (6364) (6358) (6350) (5148) (5148) (6510) (6510) (6510) (6522) (6534) (6536) (6536) (6536) (5350) (5350) (5972) (5972) (4674) (4674) (4686) (4702) (4708) (4708) (4688) (4688) (4652) (4586) (4580) (4484) (4380) (4380) (4402) (5110) (6302) (6312) (6314) (6314) (6310) (6310) (6318) (6328) (6332) (6332) (6332) (6332) (6328) (6322) (6320) (6320) (6316) (6308) (6296) (6010) (6010) (6014) (6014) (6002) (4790) (4790) (4788) (4792) (4792) (4796) (4808) (4808) (4778) (4742) (4740) (4712) (4712) (4712) (4698) (4060) (4698) (5342) (5690) (5690) (5690) (5684) (4546) (4540) (4546) (4618) (4618) (4514) (4514) (4514) (5110) (4428) (4418) (4418) (5078) (5288) (6436) (6454) (6454) (6452) (6446) (6432) (6414) (6398) (6382) (6372) (6364) (6360) (6352) (6350) (6346) (6316) (5012) (5012) (5008) (5008) (6198) (6198) (4984) (4984) (4986) (4992) (4994) (6104) (6104) (6088) (6074) (6048) (6026) (6008) (5996) (5190) (5190) (5196) (6380) (6380) (6380) (6384) (6388) (6390) (6390) (6386) (6386) (6386) (6386) (6386) (6386) (6382) (6374) (6374) (6380) (6386) (6390) (6390) (6384) (6374) (6366) (6168) (6148) (6154) (6148) (6146) (6142) (6140) (6140) (6140) (6140) (6140) (6138) (6132) (6116) (6104) (6088) (6088) (6278))) :lonset (quote (20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400 410 420 430 440 450 460 470 480 490 500 510 520 530 540 550 560 570 580 590 600 610 620 630 640 650 660 670 680 690 700 710 720 730 740 750 760 770 780 790 800 810 820 830 840 850 860 870 880 890 900 910 920 930 940 950 960 970 980 990 1000 1010 1020 1030 1040 1050 1060 1070 1080 1090 1100 1110 1120 1130 1140 1150 1160 1170 1180 1190 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 1300 1310 1320 1330 1340 1350 1360 1370 1380 1390 1400 1410 1420 1430 1440 1450 1460 1470 1480 1490 1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 1600 1610 1620 1630 1640 1650 1660 1670 1680 1690 1700 1710 1720 1730 1740 1750 1760 1770 1780 1790 1800 1810 1820 1830 1840 1850 1860 1870 1880 1890 1900 1910 1920 1930 1940 1950 1960 1970 1980 1990 2000 2010 2020 2030 2040 2050 2060 2070 2080 2090 2100 2110 2120 2130 2140 2150 2160 2170 2180 2190 2200 2210 2220 2230 2240 2250 2260 2270 2280 2290 2300 2310 2320 2330 2340 2350 2360 2370 2380 2390 2400 2410 2420 2430 2440 2450 2460 2470 2480 2490 2500 2510 2520 2530 2540 2550 2560 2570 2580 2590 2600 2610 2620 2630 2640 2650 2660 2670 2680 2690 2700 2710 2720 2730 2740 2750 2760 2770 2780 2790 2800 2810 2820 2830 2840 2850 2860 2870 2880 2890 2900 2910 2920 2930 2940 2950 2960 2970 2980 2990 3000 3010 3020 3030 3040 3050 3060 3070 3080 3090 3100 3110 3120 3130 3140 3150 3160 3170 3180 3190 3200 3210 3220 3230 3240 3250 3260 3270 3280 3290 3300 3310 3320 3330 3340 3350 3360 3370 3380 3390 3400 3410 3420 3430 3440 3450 3460 3470 3480 3490 3500 3510 3520 3530 3540 3550 3560 3570 3580 3590 3600 3610 3620 3630 3640 3650 3660 3670 3680 3690 3700 3710 3720 3730 3740 3750 3760 3770 3780 3790 3800 3810 3820 3830 3840 3850 3860 3870 3880 3890 3900 3910 3920 3930 3940 3950 3960 3970 3980 3990 4000 4010 4020 4030 4040 4050 4060 4070 4080 4090 4100 4110 4120 4130 4140 4150 4160 4170 4180 4190 4200 4210 4220 4230 4240 4250 4260 4270 4280 4290 4300 4310 4320 4330 4340 4350 4360 4370 4380 4390 4400 4410 4420 4430 4440 4450 4460 4470 4480 4490 4500 4510 4520 4530 4540 4550 4560 4570 4580 4590 4600 4610 4620 4630 4640 4650 4660 4670 4680 4690 4700 4710 4720 4730 4740 4750 4760 4770 4780 4790 4800 4810 4820 4830 4840 4850 4860 4870 4880 4890 4900)) :ldur (quotelvel (quoteloffset (quotelchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale player show-stems winpos winsize mode grillestep notechancolor? obj-mode palette-mode zoom inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote :midishare) (quote t) (om-make-point 10 40) (om-make-point 370 280) 0 1000 nil 0 0 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote gf) 36 4)) t nil nil nil) (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing" "TRACKNUM" 1) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "MARKERS" nil))) (om-make-point 331 49) (om-make-point 161 62) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:absolute "Users" "bresson" "OM-SRC" "OM-LIBS" "Pareto" "resources" "sound")) :device nil :host nil :name "akasehe" :type "aiff") 1))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "akasehe.aiff") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :libaudio) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote t) nil 0)) t nil nil nil) (om-load-editor-box1 "text-win3" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "append" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "list" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 684 145) (om-make-point 70 50) (load-buffer-textfile (quote ("0.020000	106.127678" "0.030000	328.145203" "0.040000	328.161438" "0.050000	328.161438" "0.060000	330.365875" "0.070000	330.878448" "0.080000	330.878448" "0.090000	329.984344" "0.100000	328.734711" "0.110000	163.892929" "0.120000	163.892929" "0.130000	163.842499" "0.140000	325.867157" "0.150000	325.406799" "0.160000	325.406799" "0.170000	325.089722" "0.180000	323.265930" "0.190000	318.848663" "0.200000	318.848663" "0.210000	328.260773" "0.220000	333.191498" "0.230000	336.698395" "0.240000	339.989471" "0.250000	345.191528" "0.260000	346.934448" "0.270000	351.420044" "0.280000	354.447937" "0.290000	356.776337" "0.300000	358.180481" "0.310000	360.797729" "0.320000	360.797729" "0.330000	122.881775" "0.340000	122.881775" "0.350000	122.881775" "0.360000	123.207474" "0.370000	352.983887" "0.380000	352.983887" "0.390000	344.181000" "0.400000	332.532745" "0.410000	322.646210" "0.420000	318.857697" "0.430000	317.681946" "0.440000	317.681946" "0.450000	318.487122" "0.460000	318.930145" "0.470000	318.930145" "0.480000	318.752655" "0.490000	318.752655" "0.500000	319.051910" "0.510000	319.051910" "0.520000	318.859985" "0.530000	318.587433" "0.540000	318.400146" "0.550000	318.400146" "0.560000	318.459503" "0.570000	318.817169" "0.580000	318.817169" "0.590000	318.664368" "0.600000	316.198822" "0.610000	154.358841" "0.620000	151.229385" "0.630000	140.782776" "0.640000	140.782776" "0.650000	92.838524" "0.660000	207.886826" "0.670000	275.565460" "0.680000	275.565460" "0.690000	275.565460" "0.700000	276.181580" "0.710000	276.416412" "0.720000	276.599792" "0.730000	276.792938" "0.740000	276.792938" "0.750000	274.828979" "0.760000	274.641479" "0.770000	254.993378" "0.780000	254.993378" "0.790000	258.001617" "0.800000	260.846344" "0.810000	262.630280" "0.820000	262.630280" "0.830000	260.447266" "0.840000	257.592377" "0.850000	129.384262" "0.860000	127.810852" "0.870000	111.109383" "0.880000	105.501785" "0.890000	105.501785" "0.900000	105.501785" "0.910000	117.267265" "0.920000	107.668739" "0.930000	117.267265" "0.940000	107.668739" "0.950000	211.651138" "0.960000	215.188507" "0.970000	215.188507" "0.980000	106.884209" "0.990000	106.884209" "1.000000	215.873337" "1.010000	216.692947" "1.020000	217.607361" "1.030000	218.398285" "1.040000	218.398285" "1.050000	221.009537" "1.060000	221.115341" "1.070000	221.115341" "1.080000	109.964157" "1.090000	109.662148" "1.100000	109.662148" "1.110000	109.326569" "1.120000	108.135468" "1.130000	107.829758" "1.140000	107.829758" "1.150000	110.936707" "1.160000	111.161827" "1.170000	111.161827" "1.180000	222.375610" "1.190000	222.375610" "1.200000	134.873352" "1.210000	134.873352" "1.220000	270.525909" "1.230000	274.514496" "1.240000	274.543030" "1.250000	275.193695" "1.260000	275.193695" "1.270000	274.613770" "1.280000	268.423645" "1.290000	125.232651" "1.300000	108.034576" "1.310000	108.034576" "1.320000	94.064247" "1.330000	147.911362" "1.340000	140.332092" "1.350000	140.332092" "1.360000	123.553947" "1.370000	123.553947" "1.380000	127.888054" "1.390000	137.766525" "1.400000	145.866531" "1.410000	190.633194" "1.420000	190.633194" "1.430000	190.633194" "1.440000	325.227509" "1.450000	326.752991" "1.460000	327.606598" "1.470000	329.693268" "1.480000	331.242645" "1.490000	332.987915" "1.500000	333.798096" "1.510000	334.592896" "1.520000	334.767242" "1.530000	334.834869" "1.540000	335.064178" "1.550000	335.064178" "1.560000	334.351440" "1.570000	333.724731" "1.580000	333.517822" "1.590000	332.902191" "1.600000	331.576935" "1.610000	331.142944" "1.620000	330.192596" "1.630000	276.514221" "1.640000	276.514221" "1.650000	276.606415" "1.660000	277.182343" "1.670000	277.799530" "1.680000	278.393799" "1.690000	278.393799" "1.700000	279.630157" "1.710000	279.445801" "1.720000	279.445801" "1.730000	279.265228" "1.740000	278.428009" "1.750000	276.603149" "1.760000	274.852814" "1.770000	133.287094" "1.780000	133.287094" "1.790000	129.404144" "1.800000	135.973709" "1.810000	250.508591" "1.820000	250.508591" "1.830000	247.068985" "1.840000	244.702133" "1.850000	244.236954" "1.860000	244.236954" "1.870000	244.658112" "1.880000	245.337296" "1.890000	245.560287" "1.900000	245.560287" "1.910000	243.739609" "1.920000	239.194321" "1.930000	222.618286" "1.940000	112.668785" "1.950000	137.622421" "1.960000	128.478912" "1.970000	128.556732" "1.980000	128.478912" "1.990000	109.162056" "2.000000	96.035934" "2.010000	109.162056" "2.020000	161.877563" "2.030000	324.545532" "2.040000	325.927002" "2.050000	328.143005" "2.060000	328.143005" "2.070000	328.086487" "2.080000	327.628937" "2.090000	326.495758" "2.100000	324.801971" "2.110000	323.492645" "2.120000	322.810181" "2.130000	321.954559" "2.140000	321.167725" "2.150000	321.167725" "2.160000	322.536896" "2.170000	322.536896" "2.180000	321.950073" "2.190000	320.230499" "2.200000	190.644455" "2.210000	121.513657" "2.220000	121.513657" "2.230000	98.872375" "2.240000	84.490150" "2.250000	84.490150" "2.260000	82.665215" "2.270000	127.048187" "2.280000	127.048187" "2.290000	267.025177" "2.300000	267.025177" "2.310000	264.460175" "2.320000	259.314026" "2.330000	255.630783" "2.340000	157.266052" "2.350000	157.266052" "2.360000	310.491730" "2.370000	311.585541" "2.380000	311.717957" "2.390000	311.717957" "2.400000	314.595886" "2.410000	317.118042" "2.420000	318.893219" "2.430000	320.217499" "2.440000	320.979675" "2.450000	322.196411" "2.460000	323.325226" "2.470000	326.318024" "2.480000	328.545166" "2.490000	329.670563" "2.500000	329.683136" "2.510000	329.683136" "2.520000	329.534180" "2.530000	329.107452" "2.540000	328.436890" "2.550000	328.194397" "2.560000	327.894012" "2.570000	326.958893" "2.580000	325.643341" "2.590000	324.627197" "2.600000	324.516632" "2.610000	324.516632" "2.620000	324.539307" "2.630000	324.734436" "2.640000	324.539307" "2.650000	163.039383" "2.660000	163.039383" "2.670000	161.475281" "2.680000	279.277649" "2.690000	279.417236" "2.700000	279.551331" "2.710000	279.677704" "2.720000	280.099243" "2.730000	281.373413" "2.740000	282.705444" "2.750000	282.826996" "2.760000	282.826996" "2.770000	280.675079" "2.780000	278.226166" "2.790000	274.063873" "2.800000	267.497284" "2.810000	265.413116" "2.820000	259.646118" "2.830000	259.646118" "2.840000	259.428711" "2.850000	257.735809" "2.860000	257.735809" "2.870000	257.735809" "2.880000	255.446198" "2.890000	255.300980" "2.900000	224.806808" "2.910000	220.382843" "2.920000	220.625305" "2.930000	220.625305" "2.940000	220.625305" "2.950000	112.550888" "2.960000	112.550888" "2.970000	180.938751" "2.980000	215.596451" "2.990000	215.596451" "3.000000	133.824448" "3.010000	133.824448" "3.020000	170.677597" "3.030000	170.677597" "3.040000	170.677597" "3.050000	335.564789" "3.060000	336.213501" "3.070000	336.213501" "3.080000	335.999573" "3.090000	334.277252" "3.100000	332.852539" "3.110000	332.102600" "3.120000	331.824005" "3.130000	331.648071" "3.140000	330.412872" "3.150000	328.631927" "3.160000	326.505981" "3.170000	325.129974" "3.180000	322.824066" "3.190000	321.541718" "3.200000	320.147614" "3.210000	159.864883" "3.220000	159.864883" "3.230000	351.355011" "3.240000	351.355011" "3.250000	351.355011" "3.260000	353.655365" "3.270000	356.002686" "3.280000	356.440613" "3.290000	356.756958" "3.300000	356.756958" "3.310000	179.768631" "3.320000	179.768631" "3.330000	257.364716" "3.340000	257.364716" "3.350000	121.605698" "3.360000	121.605698" "3.370000	122.457207" "3.380000	123.573563" "3.390000	124.037079" "3.400000	124.037079" "3.410000	122.678802" "3.420000	122.678802" "3.430000	120.039734" "3.440000	115.574463" "3.450000	115.196899" "3.460000	109.017227" "3.470000	102.666313" "3.480000	102.666313" "3.490000	103.997528" "3.500000	156.378357" "3.510000	311.610718" "3.520000	313.445099" "3.530000	313.574890" "3.540000	313.574890" "3.550000	312.884460" "3.560000	312.884460" "3.570000	314.449005" "3.580000	316.246521" "3.590000	317.010529" "3.600000	317.088562" "3.610000	317.088562" "3.620000	316.787079" "3.630000	316.115479" "3.640000	315.060577" "3.650000	314.711945" "3.660000	314.661346" "3.670000	314.004303" "3.680000	312.537170" "3.690000	310.471527" "3.700000	263.208801" "3.710000	263.208801" "3.720000	263.704437" "3.730000	263.704437" "3.740000	261.928192" "3.750000	130.003357" "3.760000	130.003357" "3.770000	129.929062" "3.780000	130.281296" "3.790000	130.281296" "3.800000	130.489258" "3.810000	131.398193" "3.820000	131.398193" "3.830000	129.210098" "3.840000	126.567314" "3.850000	126.297729" "3.860000	124.369331" "3.870000	124.369331" "3.880000	124.369331" "3.890000	123.272514" "3.900000	85.266922" "3.910000	123.272514" "3.920000	178.820862" "3.930000	218.732529" "3.940000	218.732529" "3.950000	218.732529" "3.960000	218.011047" "3.970000	112.941750" "3.980000	112.595451" "3.990000	112.941750" "4.000000	117.748634" "4.010000	117.748634" "4.020000	110.921700" "4.030000	110.921700" "4.040000	110.921242" "4.050000	156.482285" "4.060000	105.482597" "4.070000	104.880058" "4.080000	104.880058" "4.090000	153.658737" "4.100000	173.438263" "4.110000	336.634613" "4.120000	340.109619" "4.130000	340.109619" "4.140000	339.843872" "4.150000	338.480591" "4.160000	335.657043" "4.170000	332.255524" "4.180000	329.431213" "4.190000	326.334137" "4.200000	324.412506" "4.210000	322.934387" "4.220000	321.928223" "4.230000	320.628601" "4.240000	320.264130" "4.250000	319.330200" "4.260000	314.031067" "4.270000	147.839798" "4.280000	147.839569" "4.290000	147.522980" "4.300000	147.522980" "4.310000	293.185455" "4.320000	293.185455" "4.330000	145.498535" "4.340000	145.498535" "4.350000	145.674866" "4.360000	146.172363" "4.370000	146.265060" "4.380000	277.720947" "4.390000	277.720947" "4.400000	275.271393" "4.410000	273.027649" "4.420000	269.044128" "4.430000	265.691254" "4.440000	262.893677" "4.450000	261.118622" "4.460000	163.945816" "4.470000	163.945816" "4.480000	164.485031" "4.490000	325.928436" "4.500000	326.002747" "4.510000	326.002747" "4.520000	326.574249" "4.530000	327.443268" "4.540000	327.796997" "4.550000	327.796997" "4.560000	327.034119" "4.570000	326.822937" "4.580000	326.822937" "4.590000	327.070160" "4.600000	327.070160" "4.610000	327.036102" "4.620000	326.195618" "4.630000	324.785248" "4.640000	324.785248" "4.650000	325.692078" "4.660000	327.015076" "4.670000	327.806824" "4.680000	327.806824" "4.690000	326.642944" "4.700000	324.611298" "4.710000	323.349304" "4.720000	288.295929" "4.730000	285.136566" "4.740000	285.884918" "4.750000	285.136566" "4.760000	284.769073" "4.770000	283.845337" "4.780000	283.824829" "4.790000	283.621094" "4.800000	283.621094" "4.810000	283.621094" "4.820000	283.540222" "4.830000	283.192383" "4.840000	282.192505" "4.850000	279.742767" "4.860000	277.971985" "4.870000	275.419067" "4.880000	275.419067" "4.890000	307.074036" "" "" "" "" "")) (quote textfile) "append" "list") "x" nil (pairlis (quote (show-stems winpos winsize mode grillestep notechancolor? cmnpref obj-mode palette-mode zoom inport outport deltapict)) (list (quote t) (om-make-point 10 40) (om-make-point 370 280) 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 0 1 0 0 (om-make-point 0 0))) nil nil nil nil) (om-load-editor-box1 "text-win2" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "append" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "list" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 118 174) (om-make-point 78 59) (load-buffer-textfile (quote ("( PARTIALS     44" "( POINTS     12" "   0.046	 328.381	   6.000" "   0.058	 328.381	   6.000" "   0.070	 328.381	   6.000" "   0.081	 328.381	   6.000" "   0.093	 328.381	   6.000" "   0.104	 328.381	   6.000" "   0.116	 328.381	   6.000" "   0.128	 328.381	   6.000" "   0.139	 328.381	   6.000" "   0.151	 328.381	   6.000" "   0.163	 328.381	   6.000" "   0.174	 328.381	   6.000" ")" "( POINTS      8" "   0.046	1986.389	  -7.548" "   0.058	1986.472	  -6.393" "   0.070	1986.499	  -6.130" "   0.081	1986.417	  -7.330" "   0.093	1981.055	  -7.995" "   0.104	1970.288	  -8.962" "   0.116	1970.288	  -8.928" "   0.128	1970.288	  -9.871" ")" "( POINTS      7" "   0.058	2982.349	  -7.793" "   0.070	2982.547	  -6.093" "   0.081	2977.013	  -6.424" "   0.093	2970.447	  -6.675" "   0.104	2960.357	  -6.113" "   0.116	2955.435	  -6.783" "   0.128	2955.336	  -7.586" ")" "( POINTS      7" "   0.206	 326.255	   6.000" "   0.325	 371.448	   6.000" "   0.337	 371.448	   6.000" "   0.348	 371.448	   6.000" "   0.360	 371.448	   6.000" "   0.372	 371.448	   6.000" "   0.469	 302.426	   6.000" ")" "( POINTS      5" "   0.302	 261.217	  -5.578" "   0.313	 263.820	   1.838" "   0.325	 263.782	   6.000" "   0.337	 263.782	   6.000" "   0.348	 263.782	   6.000" ")" "( POINTS      6" "   0.360	 253.012	   6.000" "   0.372	 253.015	   6.000" "   0.383	 253.480	   6.000" "   0.395	 255.259	   4.806" "   0.406	 254.831	   0.622" "   0.418	 251.332	  -5.680" ")" "( POINTS      5" "   0.566	 308.861	   6.000" "   0.778	 274.548	   6.000" "   0.789	 274.548	   6.000" "   0.801	 274.548	   6.000" "   0.813	 274.548	   6.000" ")" "( POINTS      5" "   0.824	 263.782	   6.000" "   0.836	 263.782	   6.000" "   0.848	 263.782	   6.000" "   0.859	 258.317	   4.334" "   0.871	 251.512	  -2.457" ")" "( POINTS     27" "   0.917	 220.684	  -8.666" "   0.929	 219.818	  -1.838" "   0.940	 218.672	   2.438" "   0.952	 216.741	   4.698" "   0.964	 215.078	   5.595" "   0.975	 214.224	   5.840" "   0.987	 214.136	   5.937" "   0.998	 214.846	   6.000" "   1.010	 216.412	   5.978" "   1.022	 218.244	   5.773" "   1.033	 219.734	   5.428" "   1.045	 220.852	   5.137" "   1.057	 221.636	   5.427" "   1.068	 221.844	   5.402" "   1.080	 221.252	   5.014" "   1.091	 220.207	   4.725" "   1.103	 219.088	   4.753" "   1.115	 218.203	   4.602" "   1.126	 217.616	   4.324" "   1.138	 217.360	   4.001" "   1.149	 217.857	   3.638" "   1.161	 219.353	   3.105" "   1.173	 221.275	   2.698" "   1.184	 223.039	   2.760" "   1.196	 224.903	   1.466" "   1.207	 225.016	  -2.007" "   1.219	 220.689	  -7.722" ")" "( POINTS     10" "   1.196	 269.348	  -1.282" "   1.207	 270.346	   4.941" "   1.219	 274.548	   6.000" "   1.231	 274.548	   6.000" "   1.242	 274.548	   6.000" "   1.254	 274.548	   6.000" "   1.265	 274.548	   6.000" "   1.277	 274.548	   6.000" "   1.289	 272.067	   3.452" "   1.300	 271.049	  -3.489" ")" "( POINTS      7" "   1.405	 320.907	  -4.266" "   1.416	 323.510	   3.402" "   1.428	 328.381	   6.000" "   1.440	 328.381	   6.000" "   1.451	 328.381	   6.000" "   1.463	 328.381	   6.000" "   1.474	 328.381	   6.000" ")" "( POINTS     12" "   1.486	 339.148	   6.000" "   1.498	 339.148	   6.000" "   1.509	 339.148	   6.000" "   1.521	 339.148	   6.000" "   1.533	 339.148	   6.000" "   1.544	 339.148	   6.000" "   1.556	 339.148	   6.000" "   1.567	 339.148	   6.000" "   1.579	 339.148	   6.000" "   1.591	 339.148	   6.000" "   1.602	 339.148	   6.000" "   1.614	 339.148	   6.000" ")" "( POINTS     11" "   1.625	 328.381	   6.000" "   1.637	 328.381	   6.000" "   1.649	 328.381	   6.000" "   1.660	 328.381	   6.000" "   1.672	 328.381	   6.000" "   1.683	 328.381	   6.000" "   1.695	 328.381	   6.000" "   1.707	 328.381	   6.000" "   1.718	 328.381	   6.000" "   1.730	 321.941	   2.664" "   1.741	 322.621	  -5.617" ")" "( POINTS     11" "   1.637	 285.315	   6.000" "   1.649	 285.315	   6.000" "   1.660	 285.315	   6.000" "   1.672	 285.315	   6.000" "   1.683	 285.315	   6.000" "   1.695	 285.315	   6.000" "   1.707	 285.315	   6.000" "   1.718	 285.315	   6.000" "   1.730	 285.315	   6.000" "   1.741	 285.315	   6.000" "   1.753	 285.315	   6.000" ")" "( POINTS      5" "   1.788	 251.802	  -2.354" "   1.800	 257.515	   3.034" "   1.811	 253.015	   6.000" "   1.823	 253.015	   6.000" "   1.834	 253.015	   6.000" ")" "( POINTS      8" "   1.858	 213.729	  -1.787" "   1.869	 210.180	   1.767" "   1.881	 210.144	   3.601" "   1.892	 210.237	   4.409" "   1.904	 211.972	   4.783" "   1.916	 215.490	   4.035" "   1.927	 210.309	   1.520" "   1.939	 210.346	  -1.046" ")" "( POINTS     11" "   2.009	 319.238	  -0.769" "   2.020	 323.056	   6.000" "   2.032	 328.381	   6.000" "   2.043	 328.381	   6.000" "   2.055	 328.381	   6.000" "   2.067	 328.381	   6.000" "   2.078	 328.381	   6.000" "   2.090	 328.381	   6.000" "   2.101	 328.381	   6.000" "   2.113	 328.381	   6.000" "   2.125	 328.381	   6.000" ")" "( POINTS      8" "   2.136	 317.615	   6.000" "   2.148	 317.615	   6.000" "   2.159	 317.615	   6.000" "   2.171	 317.615	   6.000" "   2.183	 317.615	   6.000" "   2.194	 318.386	   5.991" "   2.206	 313.671	   1.823" "   2.218	 308.360	  -4.909" ")" "( POINTS     13" "   2.299	 305.827	  -2.571" "   2.310	 314.187	   3.469" "   2.322	 316.984	   6.000" "   2.334	 317.615	   6.000" "   2.345	 317.615	   6.000" "   2.357	 317.615	   6.000" "   2.368	 317.615	   6.000" "   2.380	 317.615	   6.000" "   2.392	 317.615	   6.000" "   2.403	 317.615	   6.000" "   2.415	 317.615	   6.000" "   2.426	 317.615	   6.000" "   2.438	 317.615	   6.000" ")" "( POINTS     11" "   2.310	 263.782	   6.000" "   2.322	 263.782	   6.000" "   2.334	 263.782	   6.000" "   2.345	 263.782	   6.000" "   2.357	 263.782	   6.000" "   2.368	 263.782	   6.000" "   2.380	 263.474	   6.000" "   2.392	 262.139	   6.000" "   2.403	 259.987	   4.959" "   2.415	 256.669	   1.350" "   2.426	 251.130	  -3.807" ")" "( POINTS     21" "   2.450	 328.381	   6.000" "   2.461	 328.381	   6.000" "   2.473	 328.381	   6.000" "   2.485	 328.381	   6.000" "   2.496	 328.381	   6.000" "   2.508	 328.381	   6.000" "   2.519	 328.381	   6.000" "   2.531	 328.381	   6.000" "   2.543	 328.381	   6.000" "   2.554	 328.381	   6.000" "   2.566	 328.381	   6.000" "   2.577	 328.381	   6.000" "   2.589	 328.381	   6.000" "   2.601	 328.381	   6.000" "   2.612	 328.381	   6.000" "   2.624	 328.381	   6.000" "   2.635	 328.381	   6.000" "   2.647	 328.381	   6.000" "   2.659	 328.381	   6.000" "   2.670	 328.381	   6.000" "   2.682	 328.381	   6.000" ")" "( POINTS      6" "   2.624	 279.109	  -2.328" "   2.635	 280.577	   5.167" "   2.647	 285.315	   6.000" "   2.659	 285.315	   6.000" "   2.670	 285.315	   6.000" "   2.682	 285.315	   6.000" ")" "( POINTS      7" "   2.705	 285.315	   6.000" "   2.717	 285.315	   6.000" "   2.728	 285.315	   6.000" "   2.740	 285.315	   6.000" "   2.752	 285.315	   6.000" "   2.763	 285.315	   6.000" "   2.775	 285.315	   6.000" ")" "( POINTS     10" "   2.798	 263.782	   6.000" "   2.810	 263.782	   6.000" "   2.821	 263.782	   6.000" "   2.833	 263.782	   6.000" "   2.844	 263.782	   6.000" "   2.856	 263.526	   6.000" "   2.868	 257.009	   6.000" "   2.879	 256.010	   6.000" "   2.891	 254.008	   5.147" "   2.902	 247.991	   3.543" ")" "( POINTS      7" "   2.914	 225.004	   4.117" "   2.926	 221.882	   5.441" "   2.937	 221.471	   5.651" "   2.949	 222.139	   5.414" "   2.961	 222.499	   3.809" "   2.972	 221.482	  -0.072" "   2.984	 218.789	  -5.988" ")" "( POINTS      9" "   3.030	 330.828	  -2.070" "   3.042	 334.583	   5.646" "   3.053	 339.148	   6.000" "   3.065	 339.148	   6.000" "   3.077	 339.148	   6.000" "   3.088	 339.148	   6.000" "   3.100	 339.148	   6.000" "   3.111	 339.148	   6.000" "   3.123	 339.148	   6.000" ")" "( POINTS      9" "   3.053	2018.762	  -7.563" "   3.065	2019.911	  -4.543" "   3.077	2018.716	  -3.841" "   3.088	2013.615	  -4.404" "   3.100	2003.059	  -5.441" "   3.111	1997.179	  -6.096" "   3.123	1997.057	  -6.351" "   3.135	1986.478	  -8.351" "   3.146	1981.055	  -9.917" ")" "( POINTS      9" "   3.065	3030.719	  -7.206" "   3.077	3024.200	  -4.899" "   3.088	3017.356	  -4.756" "   3.100	2998.723	  -4.476" "   3.111	2992.051	  -2.718" "   3.123	2987.755	  -3.076" "   3.135	2985.108	  -3.878" "   3.146	2978.498	  -6.537" "   3.158	2955.413	  -8.926" ")" "( POINTS      5" "   3.135	 328.381	   6.000" "   3.146	 328.381	   6.000" "   3.158	 328.381	   6.000" "   3.170	 328.381	   6.000" "   3.181	 328.381	   6.000" ")" "( POINTS     10" "   3.228	 360.681	   6.000" "   3.239	 360.681	   6.000" "   3.251	 360.681	   6.000" "   3.262	 360.681	   6.000" "   3.274	 360.681	   6.000" "   3.286	 360.681	   6.000" "   3.297	 360.681	   6.000" "   3.309	 360.681	   6.000" "   3.320	 360.681	   6.000" "   3.332	 360.682	   6.000" ")" "( POINTS      6" "   3.286	 264.639	  -5.526" "   3.297	 261.574	   3.376" "   3.309	 263.782	   6.000" "   3.320	 263.782	   6.000" "   3.332	 263.782	   6.000" "   3.344	 263.782	   6.000" ")" "( POINTS      9" "   3.344	 371.448	   6.000" "   3.355	 371.448	   6.000" "   3.367	 371.448	   6.000" "   3.379	 371.448	   6.000" "   3.390	 371.448	   6.000" "   3.402	 371.448	   6.000" "   3.413	 371.448	   6.000" "   3.425	 360.681	   6.000" "   3.437	 355.285	   4.274" ")" "( POINTS      6" "   3.355	 253.015	   6.000" "   3.367	 253.015	   6.000" "   3.379	 253.015	   6.000" "   3.390	 251.443	   4.154" "   3.402	 249.070	  -0.795" "   3.413	 242.298	  -8.436" ")" "( POINTS     20" "   3.495	 317.615	   6.000" "   3.506	 317.615	   6.000" "   3.518	 317.615	   6.000" "   3.529	 317.615	   6.000" "   3.541	 317.615	   6.000" "   3.553	 317.615	   6.000" "   3.564	 317.615	   6.000" "   3.576	 317.615	   6.000" "   3.587	 317.615	   6.000" "   3.599	 317.615	   6.000" "   3.611	 317.615	   6.000" "   3.622	 317.615	   6.000" "   3.634	 317.615	   6.000" "   3.646	 317.615	   6.000" "   3.657	 317.615	   6.000" "   3.669	 317.615	   6.000" "   3.680	 317.615	   6.000" "   3.692	 317.615	   6.000" "   3.704	 313.462	   5.368" "   3.715	 309.504	  -1.361" ")" "( POINTS     14" "   3.680	 263.742	  -7.148" "   3.692	 264.441	   0.920" "   3.704	 263.782	   6.000" "   3.715	 263.782	   6.000" "   3.727	 263.782	   6.000" "   3.738	 263.782	   6.000" "   3.750	 263.782	   6.000" "   3.762	 263.782	   6.000" "   3.773	 263.782	   6.000" "   3.785	 263.782	   6.000" "   3.796	 263.782	   6.000" "   3.808	 263.782	   6.000" "   3.820	 267.626	   6.000" "   3.831	 263.607	   5.341" ")" "( POINTS      6" "   3.855	 242.542	   6.000" "   3.866	 243.717	   6.000" "   3.878	 247.648	   6.000" "   3.889	 249.383	   6.000" "   3.901	 250.245	   3.364" "   3.913	 254.438	  -1.608" ")" "( POINTS      9" "   3.936	 223.980	   2.499" "   3.947	 221.984	   4.744" "   3.959	 221.281	   5.217" "   3.971	 221.617	   5.139" "   3.982	 222.811	   5.200" "   3.994	 224.185	   4.884" "   4.005	 225.018	   3.304" "   4.017	 225.036	  -0.244" "   4.029	 224.527	  -6.225" ")" "( POINTS      8" "   4.087	 333.912	  -8.064" "   4.098	 337.740	   1.064" "   4.110	 339.148	   6.000" "   4.122	 339.148	   6.000" "   4.133	 339.148	   6.000" "   4.145	 339.148	   6.000" "   4.156	 339.148	   6.000" "   4.168	 339.148	   6.000" ")" "( POINTS      8" "   4.180	 328.381	   6.000" "   4.191	 328.381	   6.000" "   4.203	 328.381	   6.000" "   4.214	 326.943	   6.000" "   4.226	 317.615	   6.000" "   4.238	 317.615	   6.000" "   4.249	 317.615	   6.000" "   4.261	 317.615	   6.000" ")" "( POINTS      9" "   4.284	 296.081	   6.000" "   4.296	 296.082	   6.000" "   4.307	 296.082	   6.000" "   4.319	 296.082	   6.000" "   4.331	 296.082	   6.000" "   4.342	 296.082	   6.000" "   4.354	 296.082	   6.000" "   4.365	 296.082	   6.000" "   4.377	 296.082	   6.000" ")" "( POINTS      6" "   4.435	 263.782	   6.000" "   4.447	 263.782	   6.000" "   4.458	 263.782	   6.000" "   4.470	 259.460	   6.000" "   4.481	 258.198	   2.449" "   4.493	 256.420	  -3.513" ")" "( POINTS     27" "   4.458	 328.381	   6.000" "   4.470	 328.381	   6.000" "   4.481	 328.381	   6.000" "   4.493	 328.381	   6.000" "   4.505	 328.381	   6.000" "   4.516	 328.381	   6.000" "   4.528	 328.381	   6.000" "   4.540	 328.381	   6.000" "   4.551	 328.381	   6.000" "   4.563	 328.381	   6.000" "   4.574	 328.381	   6.000" "   4.586	 328.381	   6.000" "   4.598	 328.381	   6.000" "   4.609	 328.381	   6.000" "   4.621	 328.381	   6.000" "   4.632	 328.381	   6.000" "   4.644	 328.381	   6.000" "   4.656	 328.381	   6.000" "   4.667	 328.381	   6.000" "   4.679	 328.381	   6.000" "   4.690	 328.381	   6.000" "   4.702	 328.381	   6.000" "   4.714	 328.381	   6.000" "   4.725	 328.381	   6.000" "   4.737	 328.381	   6.000" "   4.748	 328.381	   6.000" "   4.760	 328.381	   6.000" ")" "( POINTS      7" "   4.702	 280.945	  -3.826" "   4.714	 284.758	   3.594" "   4.725	 285.315	   6.000" "   4.737	 285.315	   6.000" "   4.748	 285.315	   6.000" "   4.760	 285.315	   6.000" "   4.772	 285.315	   6.000" ")" "( POINTS      8" "   4.795	 285.315	   6.000" "   4.807	 285.315	   6.000" "   4.818	 285.315	   6.000" "   4.830	 285.315	   6.000" "   4.841	 285.315	   6.000" "   4.853	 283.914	   6.000" "   4.865	 280.179	   1.187" "   4.876	 278.285	  -7.994" ")" ")" "" "" "" "" "")) (quote textfile) "append" "list") "x" nil (pairlis (quote (show-stems winpos winsize mode grillestep notechancolor? cmnpref obj-mode palette-mode zoom deltapict outport inport)) (list (quote t) (om-make-point 10 40) (om-make-point 370 280) 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 0 1 (om-make-point 0 0) 0 0)) nil nil nil nil))) (quote ((19 1 0 0 nil 0) (8 0 1 0 nil 0) (9 0 2 0 nil 0) (9 0 3 0 nil 0) (12 0 4 0 nil 0) (12 0 5 0 nil 0) (7 0 5 1 nil 0) (20 1 6 0 nil 0) (3 0 8 0 nil 0) (4 0 9 0 nil 0) (5 1 11 1 nil 0) (6 0 12 0 nil 0) (0 0 17 0 nil 0))) nil 6.020307))
